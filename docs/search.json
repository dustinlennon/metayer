[{"path":"http://localhost/BUILD.html","id":null,"dir":"","previous_headings":"","what":"Build notes","title":"Build notes","text":"helpful notes building various components.","code":""},{"path":"http://localhost/BUILD.html","id":"pkgdown","dir":"","previous_headings":"","what":"pkgdown","title":"Build notes","text":"","code":"prep_articles(\"vignettes\")  pkgdown::build_site(devel = TRUE, lazy = TRUE, preview = FALSE) pkgdown::build_site()   pkgdown::build_home_index(); pkgdown::init_site() pkgdown::build_articles()  rmarkdown::render(\"vignettes/miscellanea.Rmd\", output_format = \"all\")  workflow(); .metayer(); knitr_set_config() # knitr::knit(\"vignettes/miscellanea.Rmd\", \"vignettes/miscellanea.md\") pkgdown::build_home_index(); pkgdown::init_site() pkgdown::build_article(\"miscellanea\")  workflow(); .metayer(); knitr_set_config() pkgdown::build_home_index(); pkgdown::init_site()"},{"path":"http://localhost/BUILD.html","id":"metayer","dir":"","previous_headings":"","what":"metayer","title":"Build notes","text":"","code":"R CMD build . VERSION=0.2.4 \\ R CMD check metayer_${VERSION}.tar.gz"},{"path":"http://localhost/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 metayer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://localhost/articles/authoring.html","id":"publishing-context","dir":"Articles","previous_headings":"","what":"publishing context","title":"authoring","text":"article addresses publishing context. workflow scenario authoring documentation Jupyter notebook. requirement support rmarkdown html, rmarkdown pdf, pkgdown article output. Details document pipelines appendix.","code":""},{"path":"http://localhost/articles/authoring.html","id":"jupyter-header-yaml","dir":"Articles","previous_headings":"publishing context","what":"jupyter header yaml","title":"authoring","text":"can convenient copy paste YAML header creating new jupyter documents. , show defaults used metayer. However, easily changed via config.yml file. Documentation configuration vignette","code":"--- title: \"authoring\"  all_doc: &shared   pandoc_args:      - !with_env \"--resource-path={R_HERE_HERE}/vignettes\"  output:   html_document:     <<: *shared     theme: cerulean     highlight: espresso   pdf_document:     <<: *shared ---"},{"path":"http://localhost/articles/authoring.html","id":"with_pander","dir":"Articles","previous_headings":"","what":"with_pander","title":"authoring","text":"pander converts markdown. with_pander adds logging context dependent output. with_pander can used plots. generates image file injecting markdown link. default image format PNG, fine HTML, isn’t ideal PDF output.  However, screen grab PDF output illustrates image scaling artifacts arise raster image.","code":"# convert to markdown, with a message pander({   message(\"hello, stderr\")   pcd }) hello, stderr # publishing context upgrade! with_pander({   message(\"hello, stderr.  hello, log.\")   pcd }) [INFO/global] hello, stderr.  hello, log. hello, stderr.  hello, log. # using with_pander to generate a PNG file with_pander({   plot(pcd$x, pcd$y) })"},{"path":"http://localhost/articles/authoring.html","id":"sure_plot","dir":"Articles","previous_headings":"","what":"sure_plot","title":"authoring","text":"sure_plot addresses concern inspecting publishing context. ensures HTML document paired png raster images whereas PDF document paired svg vector images.  corresponding screen grab PDF.","code":"# Produce a context aware plot sure_plot(   {     plot(pcd$x, pcd$y)   },   height = 5,   width = 5,   res = 96,   par_opts = list(bg = \"#f1d08f\") )"},{"path":[]},{"path":"http://localhost/articles/authoring.html","id":"publishing-formats","dir":"Articles","previous_headings":"appendix","what":"publishing formats","title":"authoring","text":"snippet builds three output formats:","code":"article_name <- \"authoring\"  pub_ipynb_to_rmd(   \"./vignettes/authoring.ipynb\",   \"./vignettes/authoring.Rmd\"     )  # create standalone html and pdf rmarkdown::render(   input = \"./vignettes/authoring.Rmd\",   output_format = \"all\" )  # build the pkgdown article pkgdown::build_article(\"authoring\")"},{"path":"http://localhost/articles/authoring.html","id":"incremental-results","dir":"Articles","previous_headings":"appendix","what":"incremental results","title":"authoring","text":"Using knitr, can convert Rmarkdown format regular markdown file. suitable direct pandoc processing.","code":"# be intentional about the image format withr::with_options(   list(knitr.chunk.dev = \"jpeg\"),   {     knitr::knit(       \"./vignettes/authoring.Rmd\",       \"./vignettes/authoring_jpeg.md\"     )   } )"},{"path":"http://localhost/articles/hierarchical_storage.html","id":"globally-available-storage","dir":"Articles","previous_headings":"","what":"globally available storage","title":"hierarchical storage","text":"storage_env side effect, design. creates .storage container global environment. Subsequent calls storage_env expect access hierarchical storage container.","code":"# this will create nested environments within in the global environment rm.all() local({   order_id = \"D1234\"   order <- storage_env(\"metayer\", \"menu\", \"dinner\", order_id)   order$chicken = TRUE    meals <- storage_env(\"metayer\", \"menu\")      # assert that things are organized as we expect   stopifnot(     identical(order, meals$dinner[[\"D1234\"]])   )      # return the order, an environment, cast as a list   order %>%     as.list() }) $chicken [1] TRUE # examine objects in the global enviroment ls(all.names = TRUE) [1] \".storage\" # access the order directly .storage$metayer$menu$dinner$D1234 %>%   as.list() $chicken [1] TRUE # access the order through the api storage_env(\"metayer\", \"menu\", \"dinner\")$D1234 %>%   as.list() $chicken [1] TRUE"},{"path":"http://localhost/articles/hierarchical_storage.html","id":"locally-scoped-storage","dir":"Articles","previous_headings":"","what":"locally scoped storage","title":"hierarchical storage","text":"’s worth noting storage doesn’t live global namespace. , storage_env used way global environment polluted.","code":"# Clean up the global environment, then create a 'lunch' container in the local environment. rm.all() local({   order <- storage_env(\"metayer\", \"menu\", \"lunch\", \"L0222\", .store = \"lunch\", .envir = current_env())   order$burger = TRUE      # display a list of defined objects   ls(all.names = TRUE) %>%     capture.output() %>%     cat()    order %>%      as.list() }) [1] \"lunch\" \"order\" $burger [1] TRUE ls(all.names = TRUE) %>%   is_empty() [1] FALSE"},{"path":"http://localhost/articles/logger_integration.html","id":"logging","dir":"Articles","previous_headings":"","what":"logging","title":"logger integration","text":"code shifts prototype production, logging becomes important. Given ubiquity cli logger packages, helpful option routing cli output directly logs. generally, code generates conditions–messages, warnings, errors–easily loggable well. address concern, metayer provides with_logger function uses wrap many cli functions.","code":"## tl;dr  cli_alert(\"use cli methods to route output into the logs\") %>%   suppressMessages() [INFO/global] > use cli methods to route output into the logs tryCatch(   cli_abort(\"abort: an error\"),   error = function(m) {     log_error(\"error: handled\")     invisible(NULL)   } ) [ERROR/global] abort: an error  [ERROR/global] error: handled msg <- with_logger({   message(\"a logged message\") }) %>%   catch_cnd() [INFO/global] a logged message"},{"path":"http://localhost/articles/logger_integration.html","id":"with_logger","dir":"Articles","previous_headings":"","what":"with_logger","title":"logger integration","text":"with_logger provides explicit logging. Internally, uses withCallingHandlers, conditions processed log entry propagated next handler. results visibility log entry well message.","code":"# explicity logging with_logger({   message(\"a logged message\") }) [INFO/global] a logged message a logged message"},{"path":"http://localhost/articles/logger_integration.html","id":"cli-wrappers","dir":"Articles","previous_headings":"","what":"cli wrappers","title":"logger integration","text":"metayer uses metadata magic wrap cli functions. imbues logging functionality. metayer also utilizes cli.default_handler option provided cli package. upgrades glue semantics generate visible NULL values useful debugging. consider available variants cli_alert_warning, starting cli’s default behavior.","code":"# default behavior of cli_alert_warning withr::with_options(   list(cli.default_handler = NULL),    cli::cli_alert_warning(\"a message without a visible null: '{NULL}'\")           ) ! a message without a visible null: ''"},{"path":"http://localhost/articles/logger_integration.html","id":"cli-default_handler---visible-nulls","dir":"Articles","previous_headings":"","what":"cli.default_handler - visible nulls","title":"logger integration","text":"using default metayer handler–cli_nullity_handler–see NULL values handled differently. can also customize behavior.","code":"# visible null, default cli::cli_alert_warning(\"a message with a default null: '{NULL}'\") ! a message with a default null: '<null>' # visible null, customized withr::with_options(   list(mty.cli_null = \"NULL\"),   cli::cli_alert_warning(\"a message with a custom null: '{NULL}'\")  ) ! a message with a custom null: 'NULL'"},{"path":"http://localhost/articles/logger_integration.html","id":"explicitly-logged-cli-functions","dir":"Articles","previous_headings":"","what":"explicitly logged cli functions","title":"logger integration","text":"willing , apply wrap_logger every cli call. ’s odd see function named cli_alert_warning producing log INFO threshold. easily amended. ensure logger level aligned naming implications cli function, use level parameter. Now cli_alert_warning producing WARN entry logs. Finally, ’s worth mentioning double output . cli::cli_alert_warning bubbles message condition, with_logger processes along way. second output message, delivered user. can deal using even verbose expression. Now ’ll see ’s propagated logs.","code":"# logging with_logger(   cli::cli_alert_warning(\"a logged message from 'cli::cli_alert_warning'\") ) [INFO/global] ! a logged message from 'cli::cli_alert_warning' ! a logged message from 'cli::cli_alert_warning' # logging with log level with_logger(   cli::cli_alert_warning(\"a logged warning with 'cli::cli_alert_warning'\"),   level = logger::WARN ) [WARN/global] ! a logged warning with 'cli::cli_alert_warning' ! a logged warning with 'cli::cli_alert_warning' # fix the double messaging tryCatch(   {     with_logger(       cli::cli_alert_warning(\"a logged warning with 'cli::cli_alert_warning'\"),       level = logger::WARN     )   },   message = function(msg) invisible(NULL) ) [WARN/global] ! a logged warning with 'cli::cli_alert_warning'"},{"path":"http://localhost/articles/logger_integration.html","id":"wrapped-cli-functions","dir":"Articles","previous_headings":"","what":"wrapped cli functions","title":"logger integration","text":"metayer provides wrapped versions cli functions. recovers usual verbosity original cli package without pain previously demonstrated.","code":"# implicit logging and log levels cli_alert_warning(\"a logged warning with 'cli_alert_warning'\") [WARN/global] ! a logged warning with 'cli_alert_warning' ! a logged warning with 'cli_alert_warning'"},{"path":"http://localhost/articles/logger_integration.html","id":"namespace-context","dir":"Articles","previous_headings":"","what":"namespace context","title":"logger integration","text":"far, logging global namespace. article context, . However, logs originating elsewhere reflect point origin. log_info friends, one can explicitly specify namespace. showcase implicit namespace behavior, ’ll create two functions global namespace. ’ll also put copies functions namespace anchored metayer. intended mimic scenario functions formally defined package. previous output, note foo–inherently, log_info–doesn’t generate condition; shows . bar, hand, calls cli_alert generates condition. Hence output shows twice: log entry, processed happens, second time, now unhandled condition bubbled top level. behavior observed previously. Next, ’ll put foo bar metayer namespace observe now display “metayer” namespace.","code":"# explicit custom namespace log_warn(\"a warning with 'log_warn' in a custom namespace\", namespace = \"custom\") [WARN/custom] a warning with 'log_warn' in a custom namespace # two functions in the global namespace foo <- function() log_info(\"foo called `log_info`\") bar <- function() cli_alert(\"bar called `cli_alert`\") # global functions produce 'global' namespace foo() [INFO/global] foo called `log_info` bar() [INFO/global] > bar called `cli_alert` > bar called `cli_alert` # two functions \"above\" the metayer namespace ns <- new_environment(parent = getNamespace(\"metayer\")) ns[[\"foo\"]] <- set_env(foo, ns) ns[[\"bar\"]] <- set_env(bar, ns) # packaged functions produce 'metayer' namespace ns$foo() [INFO/metayer] foo called `log_info` ns$bar() [INFO/metayer] > bar called `cli_alert` > bar called `cli_alert`"},{"path":"http://localhost/articles/logger_integration.html","id":"glue-semantics","dir":"Articles","previous_headings":"","what":"glue semantics","title":"logger integration","text":"wrapped functions designed replicate usual glue semantics found cli logger packages. However, just like analogues logger package, log_info friends won’t handle NULL values.","code":"# glue semantics for `cli_alert_info` (with visible NULLs) v1 = \"foo\" v2 = NULL v3 = \"bar\"  cli_alert_info(\"{v1} {v2} {v3}\") [INFO/global] i foo <null> bar i foo <null> bar # glue semantics for log_info log_info(\"a log: {v1} {v3}\") [INFO/global] a log: foo bar # null values were never allowed here! logger::log_info(\"a log: {v1} {v2} {v3}\") # and so we don't expect them to be available here, either. log_info(\"a log: {v1} {v2} {v3}\")"},{"path":"http://localhost/articles/metaprogramming.html","id":"wrapped_factory","dir":"Articles","previous_headings":"","what":"wrapped_factory","title":"metaprogramming","text":"’s easier start wrapped_factory allow us wrap existing functions. One feature wrapped_factory replicates wrapped function’s signature, including default values parameters otherwise lazily evaluated. note wrappers adopt form function(cmd, args, ...). wrapped_factory substitute cmd args wrapped function. ... may replaced key-value pairs available wrapper scope. example illustrative. Let’s define wrapper adds printf debugging existing function. ’ll apply wrapper simple function: Now, invoke wrapped_factory machinery produce wrapped function. print debugging information stdout return result. ’s instructive inspect structure dbg_sum. function signature original function; body function debug_wrapper adapted cmd args. Specifically, cmd replaced sum, args replaced symbol-mapped list. wrapped_factory makes changes substitute function, replacements happen wherever symbols found wrapper code.","code":"# a simple \"debug\" wrapper debug_wrapper <- function(cmd, args, label = NULL) {       # emit debugging information   sprintf(\">>> called '%s'\\n\", label) %>%     cat(file = stdout())    # call the original function   do.call(cmd, args) } # a very simple function sum <- function(x, y) x + y dbg_sum <- wrapped_factory(\"sum\", debug_wrapper, label = \"..sum..\") dbg_sum(1, 2) >>> called '..sum..' [1] 3 dbg_sum function (x, y)  {     sprintf(\">>> called '%s'\\n\", label) %>% cat(file = stdout())     do.call(sum, list(x = x, y = y)) } <environment: 0x6430ca003880>"},{"path":"http://localhost/articles/metaprogramming.html","id":"with_monkey_patch","dir":"Articles","previous_headings":"","what":"with_monkey_patch","title":"metaprogramming","text":"with_monkey_patch roughly thing wrapped_factory, applied functions defined namespace temporarily. Changes restored exit. following simple example. Consider behavior “base::Sys.time”: captures local time zone output. means function, like one , inherently broken. ’s inflexible implementation, meaningful single, fixed timezone determined apriori. with_monkey_patch allows us fix get_time_string indirectly. temporarily modifying behavior base::Sys.time scoped block client code. , calls base::Sys.time return UTC.","code":"# e.g., \"PDT\" in Seattle. Sys.time() [1] \"2024-09-26 14:43:08 PDT\" # hmm... get_time_string <- function() {   Sys.time() %>% as.character() } get_time_string() [1] \"2024-09-26 14:43:08.423658\" # changes the behavior of base::Sys.time so that it returns UTC with_monkey_patch(   \"base::Sys.time\",   #    wrapper = function(cmd, args, func) {         t <- do.call(func, args)     .POSIXct(t, \"UTC\")   },   {     # scoped block: (nested) calls to Sys.time only take effect here     get_time_string()   } ) [1] \"2024-09-26 21:43:08.468083\" # check that the original behavior is restored get_time_string() [1] \"2024-09-26 14:43:08.472906\""},{"path":"http://localhost/articles/metaprogramming.html","id":"a-real-example","dir":"Articles","previous_headings":"with_monkey_patch","what":"a real example","title":"metaprogramming","text":"hopefully never happen production code, examples monkey patch machinery useful modifying object created deep call stack. metayer initially used monkey patching pattern affix knitr hooks rmarkdown documents. Specifically, pkgdown::build_article invokes rmarkdown::html_document, deep call stack limited configurability. scenario requires knitr hook installed, trivial modify html_document object purpose, access object wasn’t exposed pkgdown API. One proposal monkey patch behavior rmarkdown::html_document included post-processing steps required. Ultimately, monkey patching approach rmarkdown::html_document refactored away, , time, provided viable solution original problem.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"config-yml","dir":"Articles","previous_headings":"","what":"config.yml","title":"configuration","text":"Package configuration specified config.yml, designed mimic behavior config package. , currently three top-level sections: default, testing, jupyter. extension config::get enables YAML references, pattern top-level sections meant inherit default: Note two YAML tags use, !optenv !with_env.","code":"logger:   format: '{pid}|{ns}|{level}|{format(time, \"%Y-%m-%d %H:%M:%S\")}|{msg}'   logfile: '!with_env {HOME}/.local/share/r-devel/project.log'   appenders: '!optenv logger::appender_console'   threshold: '!optenv logger::DEBUG' options:   cli.default_handler: '!optenv cli_nullity_handler'   mty.cli_null: <null>   knitr.chunk.metayer_hook: yes   knitr.chunk.dev: png   knitr.chunk.comment: ''   knitr.chunk.class.output:   - sourceCode   - rOutput   knitr.package.root.dir: '!with_env {R_HERE_HERE}/vignettes'   mty.fig.width: 7   mty.fig.height: 7   mty.fig.res: 96   mty.fig.units: in display:   ippx: 0.0084773   ippy: 0.0085507 rdoc_config:   all_doc:     pandoc_args: '!with_env --resource-path={R_HERE_HERE}/vignettes'   output:     html_document:       theme: flatly       highlight: tango       pandoc_args: '!with_env --resource-path={R_HERE_HERE}/vignettes'     pdf_document:       pandoc_args: '!with_env --resource-path={R_HERE_HERE}/vignettes' rmall_exclusions: workflow"},{"path":"http://localhost/articles/metayer-config.html","id":"optenv","dir":"Articles","previous_headings":"config.yml","what":"!optenv","title":"configuration","text":"optenv used evaluate simple R expressions, like logger::INFO; idea simplify specification objects functions.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"with_env","dir":"Articles","previous_headings":"config.yml","what":"!with_env","title":"configuration","text":"with_env allows strings contain environment variables.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"onload-tasks","dir":"Articles","previous_headings":"","what":"onLoad tasks","title":"configuration","text":"metayer loaded, populates several options sets loggers. Portions config.yml named accordingly","code":""},{"path":[]},{"path":"http://localhost/articles/metayer-config.html","id":"format","dir":"Articles","previous_headings":"onLoad tasks > logger","what":"format","title":"configuration","text":"string specification logging format passed logger::log_format","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"logfile","dir":"Articles","previous_headings":"onLoad tasks > logger","what":"logfile","title":"configuration","text":"location log file. become log_appender namespace global index one.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"appenders","dir":"Articles","previous_headings":"onLoad tasks > logger","what":"appenders","title":"configuration","text":"list appenders populate subsequent indexes global namespace.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"threshold","dir":"Articles","previous_headings":"onLoad tasks > logger","what":"threshold","title":"configuration","text":"log threshold, e.g., logger::INFO","code":""},{"path":[]},{"path":"http://localhost/articles/metayer-config.html","id":"cli-default_handler","dir":"Articles","previous_headings":"onLoad tasks > options","what":"cli.default_handler","title":"configuration","text":"cli.default_handler cli package. set cli_nullity_handler order enjoy null visibility cli output.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"mty-cli_null","dir":"Articles","previous_headings":"onLoad tasks > options","what":"mty.cli_null","title":"configuration","text":"substitution made NULL values cli output.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"knitr-chunk-metayer_hook","dir":"Articles","previous_headings":"onLoad tasks > options","what":"knitr.chunk.metayer_hook","title":"configuration","text":"knitr option. Setting enables sure_plot produce uniform plotting results custom knitr hook (specified .onLoad).","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"knitr-chunk-","dir":"Articles","previous_headings":"onLoad tasks > options","what":"knitr.chunk.*","title":"configuration","text":"knitr chunk options","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"knitr-chunk-dev","dir":"Articles","previous_headings":"onLoad tasks > options","what":"knitr.chunk.dev","title":"configuration","text":"default device used knitting.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"knitr-chunk-comment","dir":"Articles","previous_headings":"onLoad tasks > options","what":"knitr.chunk.comment","title":"configuration","text":"cosmetic change R output.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"knitr-chunk-class-output","dir":"Articles","previous_headings":"onLoad tasks > options","what":"knitr.chunk.class.output","title":"configuration","text":"cosmetic change imbuing R output class tags suitable CSS.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"knitr-package-","dir":"Articles","previous_headings":"onLoad tasks > options","what":"knitr.package.*","title":"configuration","text":"knitr package options","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"knitr-package-root-dir","dir":"Articles","previous_headings":"onLoad tasks > options","what":"knitr.package.root.dir","title":"configuration","text":"directory knitr expect find references. pkgdown rmarkdown behavior can quite sensitive .","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"mty-fig-","dir":"Articles","previous_headings":"onLoad tasks > options","what":"mty.fig.*","title":"configuration","text":"with_grdev default parameters. See function reference.","code":""},{"path":[]},{"path":"http://localhost/articles/metayer-config.html","id":"ippx-ippy","dir":"Articles","previous_headings":"onLoad tasks > display","what":"ippx, ippy","title":"configuration","text":"Inches per pixel. Currently unused although likley useful creating interactive devices–e.g. X11–specifying dimensions pixels rather inches.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"rdoc_config","dir":"Articles","previous_headings":"onLoad tasks","what":"rdoc_config","title":"configuration","text":"section serves default YAML header new jupyter notebooks. , one really needs specify title creating new documents.","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"all_doc","dir":"Articles","previous_headings":"onLoad tasks > rdoc_config","what":"all_doc","title":"configuration","text":"Shared across rmarkdown document types, backreferenced pandoc_shared","code":""},{"path":"http://localhost/articles/metayer-config.html","id":"output","dir":"Articles","previous_headings":"onLoad tasks > rdoc_config","what":"output","title":"configuration","text":"usual jupyter YAML content.","code":"html_document:   theme: flatly   highlight: tango   pandoc_args: '!with_env --resource-path={R_HERE_HERE}/vignettes' pdf_document:   pandoc_args: '!with_env --resource-path={R_HERE_HERE}/vignettes'"},{"path":"http://localhost/articles/metayer-config.html","id":"rmall_exclusions","dir":"Articles","previous_headings":"onLoad tasks","what":"rmall_exclusions","title":"configuration","text":"list functions blacklist running rm..","code":""},{"path":"http://localhost/articles/metayer.html","id":"publishing-context","dir":"Articles","previous_headings":"","what":"publishing context","title":"getting started","text":"context figure created often impacts aesthetics, publishing context may require separate options configuration settings obtain uniform output. metayer::sure_plot provides DRY solution. authoring vignette describes patterns uniformize output stage publishing pipeline.","code":"sure_plot({     plot(pcd$x, pcd$y)   },   height = 5,   width = 5,   par_opts = list(bg = \"#f1d08f\") )"},{"path":"http://localhost/articles/metayer.html","id":"cli-logger-integration","dir":"Articles","previous_headings":"","what":"cli / logger integration","title":"getting started","text":"code shifts prototype production, logging becomes important. Given ubiquity cli logger packages, nice messages originally headed interactive terminal seamlessly integrated logs. logger integration vignette shows details metayer makes work.","code":"# contextualized cli calls cli_alert(\"do what you love!\") %>%    suppressMessages() [INFO/global] > do what you love!"},{"path":"http://localhost/articles/metayer.html","id":"global-hierarchical-storage","dir":"Articles","previous_headings":"","what":"global hierarchical storage","title":"getting started","text":"metayer implements global hierarchical storage container simple use. hierarchical storage vignette deeper dive.","code":"# pluck-like: create a persistent, hierarchically indexed environment rm.all() order_env <- local({   order_id <- \"D1234\"   storage_env(\"metayer\", \"menu\", \"dinner\", order_id) }) identical(.storage$metayer$menu$dinner[[\"D1234\"]], order_env) [1] TRUE"},{"path":"http://localhost/articles/metayer.html","id":"metaprogramming-helpers","dir":"Articles","previous_headings":"","what":"metaprogramming helpers","title":"getting started","text":"metayer provides two methods easing metaprogramming tasks, wrapped_factory with_monkey_patch. Specifics available metaprogramming vignette.","code":""},{"path":"http://localhost/articles/metayer.html","id":"configurability","dir":"Articles","previous_headings":"","what":"configurability","title":"getting started","text":"metayer designed incorporated future projects. , aims configurable. Details configuration vignette.","code":""},{"path":"http://localhost/articles/metayer.html","id":"miscellanea","dir":"Articles","previous_headings":"","what":"miscellanea","title":"getting started","text":"useful metayer utilities can found miscellanea vignette.","code":""},{"path":"http://localhost/articles/miscellanea.html","id":"env","dir":"Articles","previous_headings":"","what":"env","title":"miscellanea","text":"","code":"## env_stack - inspect a chain of environments env_stack(global_env()) [[1]] $ <env: global>  [[2]] $ <env: package:stats>  [[3]] $ <env: package:graphics>  [[4]] $ <env: package:grDevices>  [[5]] $ <env: package:utils>  [[6]] $ <env: package:datasets>  [[7]] $ <env: devtools_shims>  [[8]] $ <env: package:metayer>  [[9]] $ <env: package:testthat> [[10]] $ <env: package:methods> [[11]] $ <env: Autoloads> [[12]] $ <env: tools:callr> [[13]] $ <env: package:base> [[14]] $ <env: empty> ## env_stack - also works for function execution stacks / dynamic scoping env_stack(cli_alert, last = global_env()) [[1]] $ <env: wrapped-0x5914422c1a00> [[2]] $ <env: namespace:metayer> [[3]] $ <env: imports:metayer> [[4]] $ <env: namespace:base> [[5]] $ <env: global> ## env_rename - create an environment and give it a useful name env_rename(new_environment(), \"fooenv\") %>%   env_stack() [[1]] $ <env: fooenv> [[2]] $ <env: empty>"},{"path":"http://localhost/articles/miscellanea.html","id":"cli","dir":"Articles","previous_headings":"","what":"cli","title":"miscellanea","text":"","code":"## recover a message from a cli_message  seconds = 3 tryCatch(   cli_alert(\"aborting in {seconds} seconds: {NULL}\"),   message = function(msg) {     conditionMessage(msg)   } ) [INFO/global] > aborting in 3 seconds: <null> [1] \"> aborting in 3 seconds: <null>\\n\""},{"path":"http://localhost/articles/miscellanea.html","id":"other","dir":"Articles","previous_headings":"","what":"other","title":"miscellanea","text":"","code":"## update_list - recursive update of lists; the second list replaces any  ## item that it shared with the first list original <- list(a = 1, b = list(b1 = 4, b2 = 5), c = 3) refresh <- list(b = list(b2 = 6), c = 8) update_list(original, refresh) $a [1] 1  $b $b$b1 [1] 4  $b$b2 [1] 6   $c [1] 8 ## mty_uuid - get a uuid mty_uuid() [1] \"d5ca88e6-6c053-39b1e-e61fe-e3591b5ed9295\" ## mty_uuid - use the uuid.generator and uuid.salt options to get reproducible behavior uuid <- function(salt = NULL) {   withr::with_options(     list(       uuid.generator = test_mty_uuid     ),     {       mty_uuid(salt)     }   ) }  u1 <- uuid(12345) u2 <- uuid() u3 <- uuid()  u4 <- uuid(12345) u5 <- uuid()  # check that reseeding restarts the sequence stopifnot(identical(u1, u4)) stopifnot(identical(u2, u5)) u1 [1] \"615618d7-736be-e2d97-7e23a-a492cd8334ab3\""},{"path":"http://localhost/articles/miscellanea.html","id":"rm-all","dir":"Articles","previous_headings":"","what":"rm.all","title":"miscellanea","text":"Remove everything whitelist; including dotted variables, e.g. “.storage”.","code":"## show the variables in the global environment ls(all.names = TRUE) [1] \".First\"       \".Random.seed\" \".storage\"     \"original\"     \"refresh\"       [6] \"seconds\"      \"u1\"           \"u2\"           \"u3\"           \"u4\"           [11] \"u5\"           \"uuid\"         \"workflow\" ## rm.all - everything but 'u2' and 'uuid' rm.all(exclusions = c(\"u2\", \"uuid\")) ls(all.names = TRUE) [1] \"u2\"   \"uuid\""},{"path":"http://localhost/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dustin Lennon. Author, maintainer.","code":""},{"path":"http://localhost/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lennon D (2024). metayer: tools package development. R package version 0.2.4, http://localhost.","code":"@Manual{,   title = {metayer: tools for package development},   author = {Dustin Lennon},   year = {2024},   note = {R package version 0.2.4},   url = {http://localhost}, }"},{"path":"http://localhost/index.html","id":"metayer","dir":"","previous_headings":"","what":"tools for package development","title":"tools for package development","text":"Metayer collection package development tools. aims improve jupyter notebook experience, easing problem style drift later stages publication pipeline. also delivers integration cli logger packages, imbuing well-known cli operations logger entry points. package intended highly configurable, providing extensibility reverse dependency.","code":""},{"path":"http://localhost/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"tools for package development","text":"package available github.","code":""},{"path":"http://localhost/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"tools for package development","text":"Get started !","code":""},{"path":"http://localhost/reference/appender_jupyter.html","id":null,"dir":"Reference","previous_headings":"","what":"An appender for jupyter (with stderr) — appender_jupyter","title":"An appender for jupyter (with stderr) — appender_jupyter","text":"jupyter, stderr show console, messages show notebook.  jupyter context, also want display something looks like usual message output.","code":""},{"path":"http://localhost/reference/appender_jupyter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An appender for jupyter (with stderr) — appender_jupyter","text":"","code":"appender_jupyter(lines)"},{"path":"http://localhost/reference/cli_app_factory.html","id":null,"dir":"Reference","previous_headings":"","what":"obtain a CLI instance — cli_app_factory","title":"obtain a CLI instance — cli_app_factory","text":"keywords internal","code":""},{"path":"http://localhost/reference/cli_app_factory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"obtain a CLI instance — cli_app_factory","text":"","code":"cli_app_factory()"},{"path":"http://localhost/reference/cli_metayer_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle CLI messages — cli_metayer_handler","title":"Handle CLI messages — cli_metayer_handler","text":"Handle CLI messages","code":""},{"path":"http://localhost/reference/cli_metayer_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle CLI messages — cli_metayer_handler","text":"","code":"cli_metayer_handler(msg)"},{"path":"http://localhost/reference/cli_metayer_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle CLI messages — cli_metayer_handler","text":"msg cli_message","code":""},{"path":"http://localhost/reference/cli_nullity_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"replace NULLs with visible values — cli_nullity_handler","title":"replace NULLs with visible values — cli_nullity_handler","text":"replace NULLs visible values","code":""},{"path":"http://localhost/reference/cli_nullity_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"replace NULLs with visible values — cli_nullity_handler","text":"","code":"cli_nullity_handler(msg)"},{"path":"http://localhost/reference/cli_nullity_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"replace NULLs with visible values — cli_nullity_handler","text":"msg cli-message object","code":""},{"path":"http://localhost/reference/config_get.html","id":null,"dir":"Reference","previous_headings":"","what":"an improved config::get — config_get","title":"an improved config::get — config_get","text":"config_get behaves much like config::get.  However, improves upon predecessor following ways: handlers custom YAML tags allows YAML references","code":""},{"path":"http://localhost/reference/config_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"an improved config::get — config_get","text":"","code":"config_get(   ...,   r_config_active = Sys.getenv(\"R_CONFIG_ACTIVE\", \"default\"),   file = Sys.getenv(\"R_CONFIG_FILE\", here::here(\"config.yml\")),   merge.precedence = \"override\",   handlers = list(optenv = yaml_handler_optenv, with_env = yaml_handler_with_env) )"},{"path":"http://localhost/reference/config_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"an improved config::get — config_get","text":"... passed purrr::pluck extract components within active config file yaml file; defaults config.yml config configuration; defaults R_CONFIG_ACTIVE","code":""},{"path":"http://localhost/reference/decode_knitr.html","id":null,"dir":"Reference","previous_headings":"","what":"decode the start of an encoded knitr chunk — decode_knitr","title":"decode the start of an encoded knitr chunk — decode_knitr","text":"N.B., convenient place inject knitr chunk header, e.g., metayer_hook","code":""},{"path":"http://localhost/reference/decode_knitr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"decode the start of an encoded knitr chunk — decode_knitr","text":"","code":"decode_knitr(enc, dict)"},{"path":"http://localhost/reference/decode_knitr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"decode the start of an encoded knitr chunk — decode_knitr","text":"dict environment use dictionary","code":""},{"path":"http://localhost/reference/dot-pubcontext.html","id":null,"dir":"Reference","previous_headings":"","what":"Invoke context dependent code — .pubcontext","title":"Invoke context dependent code — .pubcontext","text":"Invoke context dependent code","code":""},{"path":"http://localhost/reference/dot-pubcontext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invoke context dependent code — .pubcontext","text":"","code":".pubcontext(   jupyter_expr = NULL,   knitr_expr = NULL,   rstudio_expr = NULL,   interactive_expr = NULL,   non_interactive_expr = NULL,   raise = FALSE,   .envir = parent.frame() )"},{"path":"http://localhost/reference/dot-pubcontext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invoke context dependent code — .pubcontext","text":"raise boolean, TRUE, raise errors .envir environment evaluate code block","code":""},{"path":"http://localhost/reference/dot-with_grdev.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal. Execute a code block in a graphics context. — .with_grdev","title":"Internal. Execute a code block in a graphics context. — .with_grdev","text":"Internal.  Execute code block graphics context.","code":""},{"path":"http://localhost/reference/dot-with_grdev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal. Execute a code block in a graphics context. — .with_grdev","text":"","code":".with_grdev(   grdev_name,   .expr,   dev_args = list(),   par_opts = list(),   .envir = parent.frame() )"},{"path":"http://localhost/reference/dot-with_grdev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal. Execute a code block in a graphics context. — .with_grdev","text":"grdev_name name graphics object .expr expression evaluate dev_args args pass device par_opts options pass par .envir environment execute code block","code":""},{"path":"http://localhost/reference/dot-with_grdev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal. Execute a code block in a graphics context. — .with_grdev","text":"invisible image data","code":""},{"path":"http://localhost/reference/dot-with_monkey_patch.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal. Temporarily monkey patch a namespaced method — .with_monkey_patch","title":"Internal. Temporarily monkey patch a namespaced method — .with_monkey_patch","text":"Internal.  Temporarily monkey patch namespaced method","code":""},{"path":"http://localhost/reference/dot-with_monkey_patch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal. Temporarily monkey patch a namespaced method — .with_monkey_patch","text":"","code":".with_monkey_patch(fqn, wrapper, expr, .envir = parent.frame())"},{"path":"http://localhost/reference/dot-with_monkey_patch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal. Temporarily monkey patch a namespaced method — .with_monkey_patch","text":"fqn fully qualified name, e.g. \"rmarkdown::html_document\" wrapper wrapper signature function(cmd, args, func) expr expression .envir environment evaluate expr","code":""},{"path":"http://localhost/reference/encode_knitr.html","id":null,"dir":"Reference","previous_headings":"","what":"encode the start of a knitr chunk as a hash. — encode_knitr","title":"encode the start of a knitr chunk as a hash. — encode_knitr","text":"order pandoc work expected, needs interpret content braces class tags.  Note requires adding (later removing) single space., e.g.","code":"^^^"},{"path":"http://localhost/reference/encode_knitr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"encode the start of a knitr chunk as a hash. — encode_knitr","text":"","code":"encode_knitr(chunk_header, dict, key = NULL)"},{"path":"http://localhost/reference/encode_knitr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"encode the start of a knitr chunk as a hash. — encode_knitr","text":"chunk_header line encode dict environment use dictionary","code":""},{"path":"http://localhost/reference/env_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"rename an environment — env_rename","title":"rename an environment — env_rename","text":"rename environment","code":""},{"path":"http://localhost/reference/env_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rename an environment — env_rename","text":"","code":"env_rename(e, name, envir = parent.frame())"},{"path":"http://localhost/reference/env_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rename an environment — env_rename","text":"e environment name new name, passed str_glue envir environment pass str_glue","code":""},{"path":"http://localhost/reference/env_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rename an environment — env_rename","text":"environment 'name' attribute set","code":""},{"path":"http://localhost/reference/env_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"the environment stack — env_stack","title":"the environment stack — env_stack","text":"utility function wraps env_parents.  However, always includes current environment handle function environments.","code":""},{"path":"http://localhost/reference/env_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the environment stack — env_stack","text":"","code":"env_stack(e, last = getOption(\"pkgette.env_stack_last\"))"},{"path":"http://localhost/reference/env_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the environment stack — env_stack","text":"e environment; function last passed underlying call env_parents","code":""},{"path":"http://localhost/reference/env_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the environment stack — env_stack","text":"list environments","code":""},{"path":"http://localhost/reference/get_raw_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"get raw yaml — get_raw_yaml","title":"get raw yaml — get_raw_yaml","text":"get raw yaml","code":""},{"path":"http://localhost/reference/get_raw_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get raw yaml — get_raw_yaml","text":"","code":"get_raw_yaml(...)"},{"path":"http://localhost/reference/get_raw_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get raw yaml — get_raw_yaml","text":"... pass pluck","code":""},{"path":"http://localhost/reference/grdev_adapt.html","id":null,"dir":"Reference","previous_headings":"","what":"subset device args — grdev_adapt","title":"subset device args — grdev_adapt","text":"Update default graphics device args argset.  argset provides spurious parameters, ignored.","code":""},{"path":"http://localhost/reference/grdev_adapt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset device args — grdev_adapt","text":"","code":"grdev_adapt(grdev, argset)"},{"path":"http://localhost/reference/grdev_adapt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"subset device args — grdev_adapt","text":"grdev graphics object acquired grdev_get argset passed argument set","code":""},{"path":"http://localhost/reference/grdev_get.html","id":null,"dir":"Reference","previous_headings":"","what":"get grdev information — grdev_get","title":"get grdev information — grdev_get","text":"get grdev information","code":""},{"path":"http://localhost/reference/grdev_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get grdev information — grdev_get","text":"","code":"grdev_get(grdev_name)"},{"path":"http://localhost/reference/grdev_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get grdev information — grdev_get","text":"grdev_name name graphics object","code":""},{"path":"http://localhost/reference/grdev_resolve.html","id":null,"dir":"Reference","previous_headings":"","what":"resolve file and filename — grdev_resolve","title":"resolve file and filename — grdev_resolve","text":"file`` filename` grdev specific.  available downstream agreement.","code":""},{"path":"http://localhost/reference/grdev_resolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"resolve file and filename — grdev_resolve","text":"","code":"grdev_resolve(grdev, argset)"},{"path":"http://localhost/reference/grdev_resolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"resolve file and filename — grdev_resolve","text":"grdev graphics object acquired grdev_get argset passed argument set","code":""},{"path":"http://localhost/reference/initialize_logging.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup logging — initialize_logging","title":"Setup logging — initialize_logging","text":"Setup logging","code":""},{"path":"http://localhost/reference/initialize_logging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup logging — initialize_logging","text":"","code":"initialize_logging(   max_bytes = 1000000L,   max_files = 7L,   create_directory = TRUE )"},{"path":"http://localhost/reference/initialize_logging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup logging — initialize_logging","text":"max_bytes max_bytes parameter passed logger::appender_file max_files max_files parameter passed logger::appender_file create_directory boolean, TRUE create directory","code":""},{"path":"http://localhost/reference/ipynb_yaml_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"extract YAML from a notebook — ipynb_yaml_extract","title":"extract YAML from a notebook — ipynb_yaml_extract","text":"Returns nested list comprised merged YAML raw notebook cells.","code":""},{"path":"http://localhost/reference/ipynb_yaml_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract YAML from a notebook — ipynb_yaml_extract","text":"","code":"ipynb_yaml_extract(ipynb_in)"},{"path":"http://localhost/reference/ipynb_yaml_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract YAML from a notebook — ipynb_yaml_extract","text":"ipynb_in ipynb file","code":""},{"path":"http://localhost/reference/is_knitr_chunk_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: is this the start of a knitr chunk? — is_knitr_chunk_start","title":"Internal: is this the start of a knitr chunk? — is_knitr_chunk_start","text":"Internal:  start knitr chunk?","code":""},{"path":"http://localhost/reference/is_knitr_chunk_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: is this the start of a knitr chunk? — is_knitr_chunk_start","text":"","code":"is_knitr_chunk_start(l)"},{"path":"http://localhost/reference/is_knitr_chunk_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: is this the start of a knitr chunk? — is_knitr_chunk_start","text":"l line test","code":""},{"path":"http://localhost/reference/is_knitr_enc.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: is this the start of an encoded knitr chunk? — is_knitr_enc","title":"Internal: is this the start of an encoded knitr chunk? — is_knitr_enc","text":"Internal:  start encoded knitr chunk?","code":""},{"path":"http://localhost/reference/is_knitr_enc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: is this the start of an encoded knitr chunk? — is_knitr_enc","text":"","code":"is_knitr_enc(l)"},{"path":"http://localhost/reference/is_knitr_enc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: is this the start of an encoded knitr chunk? — is_knitr_enc","text":"l line test","code":""},{"path":"http://localhost/reference/knitr_metayer_hook.html","id":null,"dir":"Reference","previous_headings":"","what":"The metayer/knitr hook used for preprocessing / postprocessing — knitr_metayer_hook","title":"The metayer/knitr hook used for preprocessing / postprocessing — knitr_metayer_hook","text":"Refer knitr documentation.  gives us opportunity rewrite chunk's output knit.md stage.  particular, use images:","code":""},{"path":"http://localhost/reference/knitr_metayer_hook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The metayer/knitr hook used for preprocessing / postprocessing — knitr_metayer_hook","text":"","code":"knitr_metayer_hook(before, options, envir, name, ...)"},{"path":"http://localhost/reference/knitr_metayer_hook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The metayer/knitr hook used for preprocessing / postprocessing — knitr_metayer_hook","text":"boolean options current chunk options envir environment code executed name name associated hook, e.g. \"metayer\" ... match knitr hook signature","code":""},{"path":"http://localhost/reference/knitr_metayer_hook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The metayer/knitr hook used for preprocessing / postprocessing — knitr_metayer_hook","text":"HTML images encoded base64 wrapped img tag; PDF images referenced markdown construction, e.g. \"\"","code":""},{"path":"http://localhost/reference/logger_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"reset non-global namespaces — logger_reset","title":"reset non-global namespaces — logger_reset","text":"Warning / Experimental:  accesses private data logger package undocumented way","code":""},{"path":"http://localhost/reference/logger_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reset non-global namespaces — logger_reset","text":"","code":"logger_reset()"},{"path":"http://localhost/reference/metayer-config.html","id":null,"dir":"Reference","previous_headings":"","what":"metayer environment variables and options — metayer-config","title":"metayer environment variables and options — metayer-config","text":"metayer environment variables options","code":""},{"path":[]},{"path":"http://localhost/reference/metayer-config.html","id":"config-yml","dir":"Reference","previous_headings":"","what":"config.yml","title":"metayer environment variables and options — metayer-config","text":"Package configuration specified config.yml, designed mimic behavior config package.  , currently three top-level sections: default, testing, jupyter.  extension config::get enables YAML references, pattern top-level sections meant inherit default: Note two YAML tags use, !optenv !with_env.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"-optenv","dir":"Reference","previous_headings":"","what":"!optenv","title":"metayer environment variables and options — metayer-config","text":"optenv used evaluate simple R expressions, like logger::INFO; idea simplify specification objects functions.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"-with-env","dir":"Reference","previous_headings":"","what":"!with_env","title":"metayer environment variables and options — metayer-config","text":"with_env allows strings contain environment variables.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"onload-tasks","dir":"Reference","previous_headings":"","what":"onLoad tasks","title":"metayer environment variables and options — metayer-config","text":"metayer loaded, populates several options sets loggers.  Portions config.yml named accordingly","code":""},{"path":[]},{"path":"http://localhost/reference/metayer-config.html","id":"format","dir":"Reference","previous_headings":"","what":"format","title":"metayer environment variables and options — metayer-config","text":"string specification logging format passed logger::log_format","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"logfile","dir":"Reference","previous_headings":"","what":"logfile","title":"metayer environment variables and options — metayer-config","text":"location log file.  become log_appender namespace global index one.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"appenders","dir":"Reference","previous_headings":"","what":"appenders","title":"metayer environment variables and options — metayer-config","text":"list appenders populate subsequent indexes global namespace.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"threshold","dir":"Reference","previous_headings":"","what":"threshold","title":"metayer environment variables and options — metayer-config","text":"log threshold, e.g., logger::INFO","code":""},{"path":[]},{"path":"http://localhost/reference/metayer-config.html","id":"cli-default-handler","dir":"Reference","previous_headings":"","what":"cli.default_handler","title":"metayer environment variables and options — metayer-config","text":"cli.default_handler cli package.  set cli_nullity_handler order enjoy null visibility cli output.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"mty-cli-null","dir":"Reference","previous_headings":"","what":"mty.cli_null","title":"metayer environment variables and options — metayer-config","text":"substitution made NULL values cli output.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"knitr-chunk-metayer-hook","dir":"Reference","previous_headings":"","what":"knitr.chunk.metayer_hook","title":"metayer environment variables and options — metayer-config","text":"knitr option.  Setting enables sure_plot produce uniform plotting results custom knitr hook (specified .onLoad).","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"knitr-chunk-","dir":"Reference","previous_headings":"","what":"knitr.chunk.*","title":"metayer environment variables and options — metayer-config","text":"knitr chunk options","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"knitr-chunk-dev","dir":"Reference","previous_headings":"","what":"knitr.chunk.dev","title":"metayer environment variables and options — metayer-config","text":"default device used knitting.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"knitr-chunk-comment","dir":"Reference","previous_headings":"","what":"knitr.chunk.comment","title":"metayer environment variables and options — metayer-config","text":"cosmetic change  R output.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"knitr-chunk-class-output","dir":"Reference","previous_headings":"","what":"knitr.chunk.class.output","title":"metayer environment variables and options — metayer-config","text":"cosmetic change imbuing R output class tags suitable CSS.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"knitr-package-","dir":"Reference","previous_headings":"","what":"knitr.package.*","title":"metayer environment variables and options — metayer-config","text":"knitr package options","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"knitr-package-root-dir","dir":"Reference","previous_headings":"","what":"knitr.package.root.dir","title":"metayer environment variables and options — metayer-config","text":"directory knitr expect find references.  pkgdown rmarkdown behavior can quite sensitive .","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"mty-fig-","dir":"Reference","previous_headings":"","what":"mty.fig.*","title":"metayer environment variables and options — metayer-config","text":"with_grdev default parameters.  See function reference.","code":""},{"path":[]},{"path":"http://localhost/reference/metayer-config.html","id":"ippx-ippy","dir":"Reference","previous_headings":"","what":"ippx, ippy","title":"metayer environment variables and options — metayer-config","text":"Inches per pixel.  Currently unused although likley useful creating interactive devices–e.g. X11–specifying dimensions pixels rather inches.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"rdoc-config","dir":"Reference","previous_headings":"","what":"rdoc_config","title":"metayer environment variables and options — metayer-config","text":"section serves default YAML header new jupyter notebooks.  , one really needs specify title creating new documents.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"all-doc","dir":"Reference","previous_headings":"","what":"all_doc","title":"metayer environment variables and options — metayer-config","text":"Shared across rmarkdown document types, backreferenced pandoc_shared","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"output","dir":"Reference","previous_headings":"","what":"output","title":"metayer environment variables and options — metayer-config","text":"usual jupyter YAML content.","code":""},{"path":"http://localhost/reference/metayer-config.html","id":"rmall-exclusions","dir":"Reference","previous_headings":"","what":"rmall_exclusions","title":"metayer environment variables and options — metayer-config","text":"list functions blacklist running rm..","code":""},{"path":"http://localhost/reference/metayer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"metayer: tools for package development — metayer-package","title":"metayer: tools for package development — metayer-package","text":"Metayer collection package development tools. provides graphic device wrappers allow uniform figure generation across publishing contexts including Jupyter, knitr, shell. Metayer also integrates cli logger packages calls cli methods show logs imbued package-level context. global, hierarchical storage container leverages native R environments. Metayer also provides -style wrapper wrapper facilitates temporary safe monkey patching namespaced internals. also helper methods inspecting function stack environments associated dynamic scoping.","code":""},{"path":[]},{"path":"http://localhost/reference/metayer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"metayer: tools for package development — metayer-package","text":"Maintainer: Dustin Lennon dustin.lennon@gmail.com (ORCID)","code":""},{"path":"http://localhost/reference/mocked_log_level_factory.html","id":null,"dir":"Reference","previous_headings":"","what":"a mocked log_level factory — mocked_log_level_factory","title":"a mocked log_level factory — mocked_log_level_factory","text":"mocked log_level factory","code":""},{"path":"http://localhost/reference/mocked_log_level_factory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a mocked log_level factory — mocked_log_level_factory","text":"","code":"mocked_log_level_factory(logfile = stderr(), envir = parent.frame())"},{"path":"http://localhost/reference/mocked_log_level_factory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a mocked log_level factory — mocked_log_level_factory","text":"logfile location redirecting log data","code":""},{"path":"http://localhost/reference/mty_uuid.html","id":null,"dir":"Reference","previous_headings":"","what":"get a uuid — mty_uuid","title":"get a uuid — mty_uuid","text":"can adapted produce seeded results specifying uuid.generator option, e.g. options(uuid.generator = test_mty_uuid)","code":""},{"path":"http://localhost/reference/mty_uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get a uuid — mty_uuid","text":"","code":"mty_uuid(...)"},{"path":"http://localhost/reference/mty_uuid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get a uuid — mty_uuid","text":"... pass parameters","code":""},{"path":"http://localhost/reference/pimg_as_html_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap png_data in an HTML img wrapper — pimg_as_html_data","title":"Wrap png_data in an HTML img wrapper — pimg_as_html_data","text":"Wrap png_data HTML img wrapper","code":""},{"path":"http://localhost/reference/pimg_as_html_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap png_data in an HTML img wrapper — pimg_as_html_data","text":"","code":"pimg_as_html_data(png_data, alt = NULL)"},{"path":"http://localhost/reference/pimg_as_html_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap png_data in an HTML img wrapper — pimg_as_html_data","text":"png_data raw png data","code":""},{"path":"http://localhost/reference/pimg_as_html_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap png_data in an HTML img wrapper — pimg_as_html_data","text":"IMG element","code":""},{"path":"http://localhost/reference/prep_articles.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare rmarkdown articles — prep_articles","title":"prepare rmarkdown articles — prep_articles","text":"Prepare rmarkdown articles downstream processing.","code":""},{"path":"http://localhost/reference/prep_articles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare rmarkdown articles — prep_articles","text":"","code":"prep_articles(..., regexp = \"*ipynb\")"},{"path":"http://localhost/reference/prep_articles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare rmarkdown articles — prep_articles","text":"... path Rmd files, passed ::regexp regular expression filtering files","code":""},{"path":"http://localhost/reference/pub_ipynb_to_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"convert a notebook to rmarkdown — pub_ipynb_to_rmd","title":"convert a notebook to rmarkdown — pub_ipynb_to_rmd","text":"Convert jupyter notebook knitr-ready rmarkdown.","code":""},{"path":"http://localhost/reference/pub_ipynb_to_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert a notebook to rmarkdown — pub_ipynb_to_rmd","text":"","code":"pub_ipynb_to_rmd(ipynb_in, rmd_out = NULL)"},{"path":"http://localhost/reference/pub_ipynb_to_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert a notebook to rmarkdown — pub_ipynb_to_rmd","text":"ipynb_in ipynb filename rmd_out rmd filename","code":""},{"path":"http://localhost/reference/pub_rmd_to_md.html","id":null,"dir":"Reference","previous_headings":"","what":"knit an rmarkdown file — pub_rmd_to_md","title":"knit an rmarkdown file — pub_rmd_to_md","text":"Knit rmarkdown file markdown file suitable pandoc processing.","code":""},{"path":"http://localhost/reference/pub_rmd_to_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"knit an rmarkdown file — pub_rmd_to_md","text":"","code":"pub_rmd_to_md(rmd_in, md_out = NULL, dev = NULL)"},{"path":"http://localhost/reference/pub_rmd_to_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"knit an rmarkdown file — pub_rmd_to_md","text":"rmd_in input file, Rmd file prepared rmarkdown::convert_ipynb md_out output file, Rmd file dev knitr.chunk.dev","code":""},{"path":"http://localhost/reference/pub_rmd_to_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"rewrite an rmarkdown file — pub_rmd_to_rmd","title":"rewrite an rmarkdown file — pub_rmd_to_rmd","text":"part multi-step process converts jupyter notebooks viable, knitr-ready Rmd files.","code":""},{"path":"http://localhost/reference/pub_rmd_to_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rewrite an rmarkdown file — pub_rmd_to_rmd","text":"","code":"pub_rmd_to_rmd(rmd_in, rmd_out = NULL, conf = list())"},{"path":"http://localhost/reference/pub_rmd_to_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rewrite an rmarkdown file — pub_rmd_to_rmd","text":"rmd_in input file, rmarkdown file prepared rmarkdown::convert_ipynb rmd_out output file, rmarkdown file conf nested list converted YAML header","code":""},{"path":"http://localhost/reference/pub_rmd_to_rmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rewrite an rmarkdown file — pub_rmd_to_rmd","text":"particular, encodes knitr cell headers class calling pandoc. required pandoc misunderstands Rmd syntax. call pandoc strips existing YAML.  , user supplied YAML written , followed decoding class tag restore original knitr  cell headers.","code":""},{"path":"http://localhost/reference/pubcontext.html","id":null,"dir":"Reference","previous_headings":"","what":"dispatch contextualized code — pubcontext","title":"dispatch contextualized code — pubcontext","text":"Pubcontext dispatches contextualized code.","code":""},{"path":"http://localhost/reference/pubcontext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dispatch contextualized code — pubcontext","text":"","code":"pubcontext(   jupyter_code = NULL,   knitr_code = NULL,   rstudio_code = NULL,   interactive_code = NULL,   non_interactive_code = NULL,   raise = FALSE,   .envir = parent.frame(),   .local_envir = parent.frame() )"},{"path":"http://localhost/reference/pubcontext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dispatch contextualized code — pubcontext","text":"jupyter_code jupyter client code knitr_code knitr client code rstudio_code rstudio client code interactive_code interactive script client code non_interactive_code non-interactive script client code raise boolean, TRUE, raise errors .envir environment evaluate code block .local_envir environment process logs","code":""},{"path":"http://localhost/reference/pubcontext_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal — pubcontext_eval","title":"Internal — pubcontext_eval","text":"Internal","code":""},{"path":"http://localhost/reference/pubcontext_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal — pubcontext_eval","text":"","code":"pubcontext_eval(provided_expr, context_name, raise, .envir = parent.frame())"},{"path":"http://localhost/reference/remap_symb.html","id":null,"dir":"Reference","previous_headings":"","what":"Remap symbols in a list — remap_symb","title":"Remap symbols in a list — remap_symb","text":"Remap symbols list","code":""},{"path":"http://localhost/reference/remap_symb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remap symbols in a list — remap_symb","text":"","code":"remap_symb(args, envir = parent.frame())"},{"path":"http://localhost/reference/remap_symb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remap symbols in a list — remap_symb","text":"args passed args, list symb = symb","code":""},{"path":"http://localhost/reference/remap_symb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remap symbols in a list — remap_symb","text":"list value symbols evaluated","code":""},{"path":"http://localhost/reference/reset_options_from_conf.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset options from config.yml — reset_options_from_conf","title":"Reset options from config.yml — reset_options_from_conf","text":"Reset options config.yml","code":""},{"path":"http://localhost/reference/reset_options_from_conf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset options from config.yml — reset_options_from_conf","text":"","code":"reset_options_from_conf()"},{"path":"http://localhost/reference/rm.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function that resets the global environment. — rm.all","title":"Utility function that resets the global environment. — rm.all","text":"Utility function resets global environment.","code":""},{"path":"http://localhost/reference/rm.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function that resets the global environment. — rm.all","text":"","code":"rm.all(exclusions = c())"},{"path":"http://localhost/reference/rm.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function that resets the global environment. — rm.all","text":"exclusions list object names excluded removal.","code":""},{"path":"http://localhost/reference/storage_env.html","id":null,"dir":"Reference","previous_headings":"","what":"retrieve a storage environment — storage_env","title":"retrieve a storage environment — storage_env","text":"retrieve storage environment","code":""},{"path":"http://localhost/reference/storage_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retrieve a storage environment — storage_env","text":"","code":"storage_env(..., .store = \".storage\", .envir = rlang::global_env())"},{"path":"http://localhost/reference/storage_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retrieve a storage environment — storage_env","text":"... indexing collection character objects .store name storage .envir environment bind storage data structure","code":""},{"path":"http://localhost/reference/storage_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"retrieve a storage environment — storage_env","text":"specified environment","code":""},{"path":"http://localhost/reference/storage_purge.html","id":null,"dir":"Reference","previous_headings":"","what":"purge a storage environment — storage_purge","title":"purge a storage environment — storage_purge","text":"purge storage environment","code":""},{"path":"http://localhost/reference/storage_purge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"purge a storage environment — storage_purge","text":"","code":"storage_purge(.store = \".storage\", .envir = rlang::global_env())"},{"path":"http://localhost/reference/storage_purge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"purge a storage environment — storage_purge","text":".store name storage .envir environment purge storage_env data structure","code":""},{"path":"http://localhost/reference/sure_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"context agnostic plotting — sure_plot","title":"context agnostic plotting — sure_plot","text":"Create plots agnostic publishing context.","code":""},{"path":"http://localhost/reference/sure_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"context agnostic plotting — sure_plot","text":"","code":"sure_plot(   code,   width = getOption(\"mty.fig.width\", 7),   height = getOption(\"mty.fig.height\", 7),   res = getOption(\"mty.fig.res\", 96),   units = getOption(\"mty.fig.units\", \"in\"),   file = tempfile(),   ...,   par_opts = list(),   .envir = parent.frame() )"},{"path":"http://localhost/reference/sure_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"context agnostic plotting — sure_plot","text":"code client code width width height height res resolution dpi units units width height file file, mapped filename, device expects ... parameters passed device args par_opts graphics pararameters .envir environment evaluate client code","code":""},{"path":"http://localhost/reference/test_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"A less motivational test — test_filter","title":"A less motivational test — test_filter","text":"less motivational test","code":""},{"path":"http://localhost/reference/test_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A less motivational test — test_filter","text":"","code":"test_filter(test_name)"},{"path":"http://localhost/reference/test_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A less motivational test — test_filter","text":"test_name canonical stub name, e.g., 'logger'","code":""},{"path":"http://localhost/reference/test_mty_uuid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a predictable identifier sequence — test_mty_uuid","title":"Create a predictable identifier sequence — test_mty_uuid","text":"probably useful testing, one can set corresponding entry config.yml get reproducible results.","code":""},{"path":"http://localhost/reference/test_mty_uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a predictable identifier sequence — test_mty_uuid","text":"","code":"test_mty_uuid(salt = NULL)"},{"path":"http://localhost/reference/test_sanitize.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic test sanitation — test_sanitize","title":"Basic test sanitation — test_sanitize","text":": runs deferred tasks may pending calls devtools::load_all testing resets loggers purges storage calls rm.noted exclusions sets deferred storage purge exit","code":""},{"path":"http://localhost/reference/test_sanitize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic test sanitation — test_sanitize","text":"","code":"test_sanitize(exclusions = c(), envir = parent.frame())"},{"path":"http://localhost/reference/test_sanitize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic test sanitation — test_sanitize","text":"exclusions list object names exclude rm.envir local environment","code":""},{"path":"http://localhost/reference/update_list.html","id":null,"dir":"Reference","previous_headings":"","what":"recursively update a list — update_list","title":"recursively update a list — update_list","text":"result combines original list refresh list, , shared key, result contains value refresh list.","code":""},{"path":"http://localhost/reference/update_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"recursively update a list — update_list","text":"","code":"update_list(x, y)"},{"path":"http://localhost/reference/update_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"recursively update a list — update_list","text":"x original nested list y refresh nested list","code":""},{"path":"http://localhost/reference/update_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"recursively update a list — update_list","text":"new list containing update original refresh","code":""},{"path":"http://localhost/reference/with_grdev.html","id":null,"dir":"Reference","previous_headings":"","what":"execute code in a graphics context — with_grdev","title":"execute code in a graphics context — with_grdev","text":"Easily execute code block specified graphics context.","code":""},{"path":"http://localhost/reference/with_grdev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"execute code in a graphics context — with_grdev","text":"","code":"with_grdev(   grdev_name,   code,   width = getOption(\"mty.fig.width\", 7),   height = getOption(\"mty.fig.height\", 7),   res = getOption(\"mty.fig.res\", 96),   units = getOption(\"mty.fig.units\", \"in\"),   ...,   par_opts = list(),   .envir = parent.frame() )"},{"path":"http://localhost/reference/with_grdev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"execute code in a graphics context — with_grdev","text":"grdev_name name graphics device, e.g. \"svg\" \"png\" code client code block width width height height res resolution units units width height ... passed dev_args par_opts graphical parameters, rather passed ... plot .envir environment evaluate code","code":""},{"path":"http://localhost/reference/with_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"wrap client code with logging functionality — with_logger","title":"wrap client code with logging functionality — with_logger","text":"wrap client code logging functionality","code":""},{"path":"http://localhost/reference/with_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrap client code with logging functionality — with_logger","text":"","code":"with_logger(code, .local_envir = parent.frame(), level = NULL)"},{"path":"http://localhost/reference/with_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrap client code with logging functionality — with_logger","text":"code client code .local_envir environment evaluate client code level logger level; may override condition message defaults","code":""},{"path":"http://localhost/reference/with_monkey_patch.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily monkey patch a namespaced method — with_monkey_patch","title":"Temporarily monkey patch a namespaced method — with_monkey_patch","text":"Temporarily monkey patch namespaced method","code":""},{"path":"http://localhost/reference/with_monkey_patch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily monkey patch a namespaced method — with_monkey_patch","text":"","code":"with_monkey_patch(fqn, wrapper, code, .envir = parent.frame())"},{"path":"http://localhost/reference/with_monkey_patch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily monkey patch a namespaced method — with_monkey_patch","text":"fqn fully qualified name, e.g. \"rmarkdown::html_document\" wrapper wrapper signature function(cmd, args, func) code user code .envir environment evaluate expr","code":""},{"path":"http://localhost/reference/wrap_get_namespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapped namespace — wrap_get_namespace","title":"Wrapped namespace — wrap_get_namespace","text":"Wrapped namespace","code":""},{"path":"http://localhost/reference/wrap_get_namespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapped namespace — wrap_get_namespace","text":"","code":"wrap_get_namespace(.caller_env)"},{"path":"http://localhost/reference/wrap_get_namespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapped namespace — wrap_get_namespace","text":".caller_env caller environment","code":""},{"path":"http://localhost/reference/wrap_get_namespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapped namespace — wrap_get_namespace","text":"namespace","code":""},{"path":"http://localhost/reference/wrapped_cli.html","id":null,"dir":"Reference","previous_headings":"","what":"wrapped cli functions — cli_abort","title":"wrapped cli functions — cli_abort","text":"wrapped versions cli methods.  wrapper inserts condition handler produces log data.","code":""},{"path":"http://localhost/reference/wrapped_cli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrapped cli functions — cli_abort","text":"","code":"cli_abort(   message,   ...,   call = .envir,   .envir = parent.frame(),   .frame = .envir )  cli_alert(text, id = NULL, class = NULL, wrap = FALSE, .envir = parent.frame())  cli_alert_danger(   text,   id = NULL,   class = NULL,   wrap = FALSE,   .envir = parent.frame() )  cli_alert_info(   text,   id = NULL,   class = NULL,   wrap = FALSE,   .envir = parent.frame() )  cli_alert_success(   text,   id = NULL,   class = NULL,   wrap = FALSE,   .envir = parent.frame() )  cli_alert_warning(   text,   id = NULL,   class = NULL,   wrap = FALSE,   .envir = parent.frame() )  cli_blockquote(   quote,   citation = NULL,   id = NULL,   class = NULL,   .envir = parent.frame() )  cli_bullets(text, id = NULL, class = NULL, .envir = parent.frame())  cli_bullets_raw(text, id = NULL, class = NULL)  cli_code(   lines = NULL,   ...,   language = \"R\",   .auto_close = TRUE,   .envir = environment() )  cli_div(   id = NULL,   class = NULL,   theme = NULL,   .auto_close = TRUE,   .envir = parent.frame() )  cli_dl(   items = NULL,   labels = names(items),   id = NULL,   class = NULL,   .close = TRUE,   .auto_close = TRUE,   .envir = parent.frame() )  cli_end(id = NULL)  cli_h1(text, id = NULL, class = NULL, .envir = parent.frame())  cli_h2(text, id = NULL, class = NULL, .envir = parent.frame())  cli_h3(text, id = NULL, class = NULL, .envir = parent.frame())  cli_inform(message, ..., .envir = parent.frame())  cli_li(   items = NULL,   labels = names(items),   id = NULL,   class = NULL,   .auto_close = TRUE,   .envir = parent.frame() )  cli_ol(   items = NULL,   id = NULL,   class = NULL,   .close = TRUE,   .auto_close = TRUE,   .envir = parent.frame() )  cli_progress_message(   msg,   current = TRUE,   .auto_close = TRUE,   .envir = parent.frame(),   ... )  cli_progress_output(text, id = NULL, .envir = parent.frame())  cli_progress_step(   msg,   msg_done = msg,   msg_failed = msg,   spinner = FALSE,   class = if (!spinner) \".alert-info\",   current = TRUE,   .auto_close = TRUE,   .envir = parent.frame(),   ... )  cli_rule(   left = \"\",   center = \"\",   right = \"\",   id = NULL,   .envir = parent.frame() )  cli_text(..., .envir = parent.frame())  cli_ul(   items = NULL,   id = NULL,   class = NULL,   .close = TRUE,   .auto_close = TRUE,   .envir = parent.frame() )  cli_vec(x, style = list())  cli_verbatim(..., .envir = parent.frame())  cli_warn(message, ..., .envir = parent.frame())"},{"path":"http://localhost/reference/wrapped_cli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrapped cli functions — cli_abort","text":"message formatted via call cli_bullets(). ... Passed rlang::abort(), rlang::warn() rlang::inform(). call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages. .envir Environment evaluate glue expressions . .frame throwing context. Used default .trace_bottom, determine internal package mention internal errors .internal TRUE. text Text alert. id Id alert element. Can used themes. class Class alert element. Can used themes. wrap Whether auto-wrap text alert. quote Text quotation. citation Source quotation, typically link name person. lines Character vector, line line code, newline characters also create new lines. Note glue substitution performed code. language Programming language. also added class, addition code. .auto_close Passed cli_div() creating container code. default code container closed emitting lines ... via cli_verbatim(). can keep container open .auto_close /.envir, calling cli_verbatim() add () code. Note code formatted syntax highlighted separately cli_verbatim() call. theme custom theme container. See themes. items Named character vector, NULL. NULL, used list items. labels Item labels. Defaults names items. .close Whether close list container items specified. FALSE new items can added list. msg Message show. may contain glue substitution cli styling. can updated via cli_progress_update(), usual. current Passed cli_progress_bar(). msg_done Message show successful termination. default msg styled cli success alert (see cli_alert_success()). msg_failed Message show unsuccessful termination. default msg styled cli danger alert (see cli_alert_danger()). spinner Whether show spinner beginning line. make spinner spin, need call cli_progress_update() regularly. left Label show left. interferes center label, one can present. center Label show center. interferes  left right labels. right Label show right. interferes center label, one can present. x Vector collapsed cli. style Style apply vector. used theme span element created vector. can set vec-sep vec-last modify separator last separator.","code":""},{"path":"http://localhost/reference/wrapped_cli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrapped cli functions — cli_abort","text":"id container contains code.","code":""},{"path":"http://localhost/reference/wrapped_cli.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"wrapped cli functions — cli_abort","text":"","code":"n <- \"boo\" cli_abort(c(         \"{.var n} must be a numeric vector\",   \"x\" = \"You've supplied a {.cls {class(n)}} vector.\" )) #> Error: #> ! `n` must be a numeric vector #> ✖ You've supplied a <character> vector. #> Run `rlang::last_error()` to see where the error occurred. len <- 26 idx <- 100 cli_abort(c(         \"Must index an existing element:\",   \"i\" = \"There {?is/are} {len} element{?s}.\",   \"x\" = \"You've tried to subset element {idx}.\" )) #> Error: #> ! Must index an existing element: #> ℹ There are 26 elements. #> ✖ You've tried to subset element 100. #> Run `rlang::last_error()` to see where the error occurred."},{"path":[]},{"path":"http://localhost/reference/wrapped_factory.html","id":null,"dir":"Reference","previous_headings":"","what":"construct a wrapped function — wrapped_factory","title":"construct a wrapped function — wrapped_factory","text":"wrapper function signature, function(cmd, args, ..., .name = NULL) ... may, optionally, replaced named parameters default values.","code":""},{"path":"http://localhost/reference/wrapped_factory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct a wrapped function — wrapped_factory","text":"","code":"wrapped_factory(name, wrapper, ...)"},{"path":"http://localhost/reference/wrapped_factory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct a wrapped function — wrapped_factory","text":"name function name, string wrapper wrapper, function ... (named) parameters execution stack; .e., private wrapper","code":""},{"path":"http://localhost/reference/wrapped_factory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"construct a wrapped function — wrapped_factory","text":"code invoked wrapped function, function signature changed match wrapped function.  cmd substituted wrapped function args substituted list.  list form apple = apple, banana = banana, etc.  particular, right hand side list element symbol need mapped value.  One way accomplish include .call(cmd, args) line wrapper code.","code":""},{"path":"http://localhost/reference/wrapped_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"wrapped logger functions — log_level","title":"wrapped logger functions — log_level","text":"functions wrapped versions analogues logger package.","code":""},{"path":"http://localhost/reference/wrapped_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrapped logger functions — log_level","text":"","code":"log_level(   level,   ...,   namespace = NA_character_,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )  log_debug(   ...,   namespace = NA_character_,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )  log_error(   ...,   namespace = NA_character_,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )  log_fatal(   ...,   namespace = NA_character_,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )  log_info(   ...,   namespace = NA_character_,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )  log_success(   ...,   namespace = NA_character_,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )  log_trace(   ...,   namespace = NA_character_,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )  log_warn(   ...,   namespace = NA_character_,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )"},{"path":"http://localhost/reference/wrapped_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrapped logger functions — log_level","text":"level log level, see log_levels details ... R objects can converted character vector via active message formatter function namespace string referring logger environment / config used override target message record used instead default namespace, defined R package name logger called, falls back common, global namespace. .logcall logging call evaluated (useful formatters layouts want access raw, unevaluated R expression) .topcall R expression logging function called (useful formatters layouts extract calling function's name arguments) .topenv original frame .topcall calling function formatter function evaluated used look namespace well via logger:::top_env_name","code":""},{"path":"http://localhost/reference/wrapped_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrapped logger functions — log_level","text":"Invisible list logger objects. See logger details format/","code":""},{"path":[]},{"path":"http://localhost/reference/wrapped_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wrapped logger functions — log_level","text":"","code":"if (FALSE) { # \\dontrun{ log_level(INFO, 'hi there') log_info('hi there')  ## output omitted log_debug('hi there')  ## lower threshold and retry log_threshold(TRACE) log_debug('hi there')  ## multiple lines log_info('ok {1:3} + {1:3} = {2*(1:3)}')  log_layout(layout_json()) log_info('ok {1:3} + {1:3} = {2*(1:3)}')  ## note for the JSON output, glue is not automatically applied log_info(glue::glue('ok {1:3} + {1:3} = {2*(1:3)}')) } # }"},{"path":"http://localhost/reference/wrapped_pander.html","id":null,"dir":"Reference","previous_headings":"","what":"wrapped pander functions — pander","title":"wrapped pander functions — pander","text":"functions wrapped versions analogues pander package. imbue original implementations logger functionality.","code":""},{"path":"http://localhost/reference/wrapped_pander.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrapped pander functions — pander","text":"","code":"pander(x = NULL, ...)  pander_return(...)"},{"path":"http://localhost/reference/wrapped_pander.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrapped pander functions — pander","text":"x R object ... optional parameters passed special methods /raw pandoc.* functions","code":""},{"path":"http://localhost/reference/wrapped_pander.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrapped pander functions — pander","text":"default function outputs (see: cat) result. want catch result instead, call function ending .return.","code":""},{"path":"http://localhost/reference/wrapped_pander.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"wrapped pander functions — pander","text":"function can called pander pandoc .","code":""},{"path":"http://localhost/reference/wrapped_pander.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"wrapped pander functions — pander","text":"John MacFarlane (2013): _Pandoc User's Guide_. https://johnmacfarlane.net/pandoc/README.html David Hajage (2011): _ascii. Export R objects several markup languages._ https://cran.r-project.org/package=ascii Hlavac, Marek (2013): _stargazer: LaTeX code well-formatted regression summary statistics tables._ https://cran.r-project.org/package=stargazer","code":""},{"path":[]},{"path":"http://localhost/reference/wrapped_pander.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wrapped pander functions — pander","text":"","code":"## Vectors pander(1:10) #> _1_, _2_, _3_, _4_, _5_, _6_, _7_, _8_, _9_ and _10_ pander(letters) #> _a_, _b_, _c_, _d_, _e_, _f_, _g_, _h_, _i_, _j_, _k_, _l_, _m_, _n_, _o_, _p_, _q_, _r_, _s_, _t_, _u_, _v_, _w_, _x_, _y_ and _z_ pander(mtcars$am) #> _1_, _1_, _1_, _0_, _0_, _0_, _0_, _0_, _0_, _0_, _0_, _0_, _0_, _0_, _0_, _0_, _0_, _1_, _1_, _1_, _0_, _0_, _0_, _0_, _0_, _1_, _1_, _1_, _1_, _1_, _1_ and _1_ pander(factor(mtcars$am)) #> _2_, _2_, _2_, _1_, _1_, _1_, _1_, _1_, _1_, _1_, _1_, _1_, _1_, _1_, _1_, _1_, _1_, _2_, _2_, _2_, _1_, _1_, _1_, _1_, _1_, _2_, _2_, _2_, _2_, _2_, _2_ and _2_  ## Lists pander(list(1, 2, 3, c(1, 2))) #>  #>  #>   * _1_ #>   * _2_ #>   * _3_ #>   * _1_ and _2_ #>  #> <!-- end of list --> #>  #>  pander(list(a = 1, b = 2, c = table(mtcars$am))) #>  #>  #>   * **a**: _1_ #>   * **b**: _2_ #>   * **c**: #>  #>     --------- #>      0    1 #>     ---- ---- #>      19   13 #>     --------- #>  #>  #> <!-- end of list --> #>  #>  pander(list(1, 2, 3, list(1, 2))) #>  #>  #>   * _1_ #>   * _2_ #>   * _3_ #>   * #>  #>       * _1_ #>       * _2_ #>  #>  #> <!-- end of list --> #>  #>  pander(list(a = 1, 2, 3, list(1, 2))) #>  #>  #>   * **a**: _1_ #>   * _2_ #>   * _3_ #>   * #>  #>       * _1_ #>       * _2_ #>  #>  #> <!-- end of list --> #>  #>  pander(list('FOO', letters[1:3], list(1:5), table(mtcars$gear), list('FOOBAR', list('a', 'b')))) #>  #>  #>   * FOO #>   * _a_, _b_ and _c_ #>   * #>  #>       * _1_, _2_, _3_, _4_ and _5_ #>  #>   * #>  #>     ------------- #>      3    4    5 #>     ---- ---- --- #>      15   12   5 #>     ------------- #>  #>   * #>  #>       * FOOBAR #>       * #>  #>           * a #>           * b #>  #>  #>  #> <!-- end of list --> #>  #>  pander(list(a = 1, b = 2, c = table(mtcars$am), x = list(myname = 1, 2), 56)) #>  #>  #>   * **a**: _1_ #>   * **b**: _2_ #>   * **c**: #>  #>     --------- #>      0    1 #>     ---- ---- #>      19   13 #>     --------- #>  #>   * **x**: #>  #>       * **myname**: _1_ #>       * _2_ #>  #>   * _56_ #>  #> <!-- end of list --> #>  #>  pander(unclass(chisq.test(table(mtcars$am, mtcars$gear)))) #> Warning: Chi-squared approximation may be incorrect #>  #>  #>   * **statistic**: #>  #>     ----------- #>      X-squared #>     ----------- #>        20.94 #>     ----------- #>  #>   * **parameter**: #>  #>     ---- #>      df #>     ---- #>      2 #>     ---- #>  #>   * **p.value**: _2.831e-05_ #>   * **method**: Pearson's Chi-squared test #>   * **data.name**: table(mtcars$am, mtcars$gear) #>   * **observed**: #>  #>     --------------------- #>      &nbsp;   3    4   5 #>     -------- ---- --- --- #>      **0**    15   4   0 #>  #>      **1**    0    8   5 #>     --------------------- #>  #>   * **expected**: #>  #>     -------------------------------- #>      &nbsp;     3       4       5 #>     -------- ------- ------- ------- #>      **0**    8.906   7.125   2.969 #>  #>      **1**    6.094   4.875   2.031 #>     -------------------------------- #>  #>   * **residuals**: #>  #>     ----------------------------------- #>      &nbsp;     3        4        5 #>     -------- -------- -------- -------- #>      **0**    2.042    -1.171   -1.723 #>  #>      **1**    -2.469   1.415    2.083 #>     ----------------------------------- #>  #>   * **stdres**: #>  #>     ----------------------------------- #>      &nbsp;     3        4        5 #>     -------- -------- -------- -------- #>      **0**    4.395    -2.323   -2.943 #>  #>      **1**    -4.395   2.323    2.943 #>     ----------------------------------- #>  #>  #> <!-- end of list --> #>  #>   ## Arrays pander(mtcars) #>  #> -------------------------------------------------------------------------------- #>          &nbsp;            mpg    cyl   disp    hp    drat    wt     qsec    vs  #> ------------------------- ------ ----- ------- ----- ------ ------- ------- ---- #>       **Mazda RX4**         21     6     160    110   3.9    2.62    16.46   0   #>  #>     **Mazda RX4 Wag**       21     6     160    110   3.9    2.875   17.02   0   #>  #>      **Datsun 710**        22.8    4     108    93    3.85   2.32    18.61   1   #>  #>    **Hornet 4 Drive**      21.4    6     258    110   3.08   3.215   19.44   1   #>  #>   **Hornet Sportabout**    18.7    8     360    175   3.15   3.44    17.02   0   #>  #>        **Valiant**         18.1    6     225    105   2.76   3.46    20.22   1   #>  #>      **Duster 360**        14.3    8     360    245   3.21   3.57    15.84   0   #>  #>       **Merc 240D**        24.4    4    146.7   62    3.69   3.19     20     1   #>  #>       **Merc 230**         22.8    4    140.8   95    3.92   3.15    22.9    1   #>  #>       **Merc 280**         19.2    6    167.6   123   3.92   3.44    18.3    1   #>  #>       **Merc 280C**        17.8    6    167.6   123   3.92   3.44    18.9    1   #>  #>      **Merc 450SE**        16.4    8    275.8   180   3.07   4.07    17.4    0   #>  #>      **Merc 450SL**        17.3    8    275.8   180   3.07   3.73    17.6    0   #>  #>      **Merc 450SLC**       15.2    8    275.8   180   3.07   3.78     18     0   #>  #>  **Cadillac Fleetwood**    10.4    8     472    205   2.93   5.25    17.98   0   #>  #>  **Lincoln Continental**   10.4    8     460    215    3     5.424   17.82   0   #>  #>   **Chrysler Imperial**    14.7    8     440    230   3.23   5.345   17.42   0   #>  #>       **Fiat 128**         32.4    4    78.7    66    4.08    2.2    19.47   1   #>  #>      **Honda Civic**       30.4    4    75.7    52    4.93   1.615   18.52   1   #>  #>    **Toyota Corolla**      33.9    4    71.1    65    4.22   1.835   19.9    1   #>  #>     **Toyota Corona**      21.5    4    120.1   97    3.7    2.465   20.01   1   #>  #>   **Dodge Challenger**     15.5    8     318    150   2.76   3.52    16.87   0   #>  #>      **AMC Javelin**       15.2    8     304    150   3.15   3.435   17.3    0   #>  #>      **Camaro Z28**        13.3    8     350    245   3.73   3.84    15.41   0   #>  #>   **Pontiac Firebird**     19.2    8     400    175   3.08   3.845   17.05   0   #>  #>       **Fiat X1-9**        27.3    4     79     66    4.08   1.935   18.9    1   #>  #>     **Porsche 914-2**       26     4    120.3   91    4.43   2.14    16.7    0   #>  #>     **Lotus Europa**       30.4    4    95.1    113   3.77   1.513   16.9    1   #>  #>    **Ford Pantera L**      15.8    8     351    264   4.22   3.17    14.5    0   #>  #>     **Ferrari Dino**       19.7    6     145    175   3.62   2.77    15.5    0   #>  #>     **Maserati Bora**       15     8     301    335   3.54   3.57    14.6    0   #>  #>      **Volvo 142E**        21.4    4     121    109   4.11   2.78    18.6    1   #> -------------------------------------------------------------------------------- #>  #> Table: Table continues below #>  #>   #> -------------------------------------------- #>          &nbsp;            am   gear   carb  #> ------------------------- ---- ------ ------ #>       **Mazda RX4**        1     4      4    #>  #>     **Mazda RX4 Wag**      1     4      4    #>  #>      **Datsun 710**        1     4      1    #>  #>    **Hornet 4 Drive**      0     3      1    #>  #>   **Hornet Sportabout**    0     3      2    #>  #>        **Valiant**         0     3      1    #>  #>      **Duster 360**        0     3      4    #>  #>       **Merc 240D**        0     4      2    #>  #>       **Merc 230**         0     4      2    #>  #>       **Merc 280**         0     4      4    #>  #>       **Merc 280C**        0     4      4    #>  #>      **Merc 450SE**        0     3      3    #>  #>      **Merc 450SL**        0     3      3    #>  #>      **Merc 450SLC**       0     3      3    #>  #>  **Cadillac Fleetwood**    0     3      4    #>  #>  **Lincoln Continental**   0     3      4    #>  #>   **Chrysler Imperial**    0     3      4    #>  #>       **Fiat 128**         1     4      1    #>  #>      **Honda Civic**       1     4      2    #>  #>    **Toyota Corolla**      1     4      1    #>  #>     **Toyota Corona**      0     3      1    #>  #>   **Dodge Challenger**     0     3      2    #>  #>      **AMC Javelin**       0     3      2    #>  #>      **Camaro Z28**        0     3      4    #>  #>   **Pontiac Firebird**     0     3      2    #>  #>       **Fiat X1-9**        1     4      1    #>  #>     **Porsche 914-2**      1     5      2    #>  #>     **Lotus Europa**       1     5      2    #>  #>    **Ford Pantera L**      1     5      4    #>  #>     **Ferrari Dino**       1     5      6    #>  #>     **Maserati Bora**      1     5      8    #>  #>      **Volvo 142E**        1     4      2    #> -------------------------------------------- #>  pander(table(mtcars$am)) #>  #> --------- #>  0    1   #> ---- ---- #>  19   13  #> --------- #>  pander(table(mtcars$am, mtcars$gear)) #>  #> --------------------- #>  &nbsp;   3    4   5  #> -------- ---- --- --- #>  **0**    15   4   0  #>  #>  **1**    0    8   5  #> --------------------- #>   ## Tests pander(ks.test(runif(50), runif(50))) #>  #> --------------------------------------------------- #>  Test statistic   P value   Alternative hypothesis  #> ---------------- --------- ------------------------ #>       0.22        0.1786          two-sided         #> --------------------------------------------------- #>  #> Table: Exact two-sample Kolmogorov-Smirnov test: `runif(50)` and `runif(50)` #>  pander(chisq.test(table(mtcars$am, mtcars$gear))) #> Warning: Chi-squared approximation may be incorrect #>  #> --------------------------------------- #>  Test statistic   df       P value      #> ---------------- ---- ----------------- #>      20.94        2    2.831e-05 * * *  #> --------------------------------------- #>  #> Table: Pearson's Chi-squared test: `table(mtcars$am, mtcars$gear)` #>  pander(t.test(extra ~ group, data = sleep)) #>  #> ----------------------------------------------------------------------------- #>  Test statistic    df     P value   Alternative hypothesis   mean in group 1  #> ---------------- ------- --------- ------------------------ ----------------- #>      -1.861       17.78   0.07939         two.sided               0.75        #> ----------------------------------------------------------------------------- #>  #> Table: Welch Two Sample t-test: `extra` by `group` (continued below) #>  #>   #> ----------------- #>  mean in group 2  #> ----------------- #>       2.33        #> ----------------- #>   ## Models ml <- with(lm(mpg ~ hp + wt), data = mtcars) pander(ml) #>  #> --------------------------------------------------------------- #>      &nbsp;        Estimate   Std. Error   t value   Pr(>|t|)   #> ----------------- ---------- ------------ --------- ----------- #>  **(Intercept)**    37.23       1.599       23.28    2.565e-20  #>  #>      **hp**        -0.03177    0.00903     -3.519    0.001451   #>  #>      **wt**         -3.878      0.6327     -6.129    1.12e-06   #> --------------------------------------------------------------- #>  #> Table: Fitting linear model: mpg ~ hp + wt #>  pander(anova(ml)) #>  #> ------------------------------------------------------------- #>     &nbsp;       Df   Sum Sq   Mean Sq   F value    Pr(>F)    #> --------------- ---- -------- --------- --------- ----------- #>     **hp**       1    678.4     678.4     100.9    5.987e-11  #>  #>     **wt**       1    252.6     252.6     37.56    1.12e-06   #>  #>  **Residuals**   29    195      6.726      NA         NA      #> ------------------------------------------------------------- #>  #> Table: Analysis of Variance Table #>  pander(aov(ml)) #>  #> ------------------------------------------------------------- #>     &nbsp;       Df   Sum Sq   Mean Sq   F value    Pr(>F)    #> --------------- ---- -------- --------- --------- ----------- #>     **hp**       1    678.4     678.4     100.9    5.987e-11  #>  #>     **wt**       1    252.6     252.6     37.56    1.12e-06   #>  #>  **Residuals**   29    195      6.726      NA         NA      #> ------------------------------------------------------------- #>  #> Table: Analysis of Variance Model #>  ## Dobson (1990) Page 93: Randomized Controlled Trial (examples from: ?glm) counts <- c(18, 17, 15, 20, 10, 20, 25, 13, 12) outcome <- gl(3, 1, 9) treatment <- gl(3, 3) m <- glm(counts ~ outcome + treatment, family = poisson()) pander(m) #>  #> ------------------------------------------------------------------ #>      &nbsp;        Estimate    Std. Error    z value    Pr(>|z|)   #> ----------------- ----------- ------------ ----------- ----------- #>  **(Intercept)**     3.045       0.1709       17.81     5.427e-71  #>  #>   **outcome2**      -0.4543      0.2022      -2.247      0.02465   #>  #>   **outcome3**      -0.293       0.1927       -1.52      0.1285    #>  #>  **treatment2**    1.218e-15      0.2       6.088e-15       1      #>  #>  **treatment3**    8.438e-16      0.2       4.219e-15       1      #> ------------------------------------------------------------------ #>  #> Table: Fitting generalized (poisson/log) linear model: counts ~ outcome + treatment #>  pander(anova(m)) #>  #> -------------------------------------------------------------------- #>     &nbsp;       Df   Deviance    Resid. Df   Resid. Dev   Pr(>Chi)  #> --------------- ---- ----------- ----------- ------------ ---------- #>    **NULL**      NA      NA           8         10.58         NA     #>  #>   **outcome**    2      5.452         6         5.129      0.06547   #>  #>  **treatment**   2    6.217e-15       4         5.129         1      #> -------------------------------------------------------------------- #>  #> Table: Analysis of Deviance Table #>  pander(aov(m)) #>  #> ---------------------------------------------------------------- #>     &nbsp;       Df    Sum Sq     Mean Sq     F value    Pr(>F)  #> --------------- ---- ----------- ---------- ----------- -------- #>   **outcome**    2      92.67      46.33       2.224     0.2242  #>  #>  **treatment**   2    9.861e-31   4.93e-31   2.367e-32     1     #>  #>  **Residuals**   4      83.33      20.83        NA         NA    #> ---------------------------------------------------------------- #>  #> Table: Analysis of Variance Model #>  ## overwriting labels pander(lm(Sepal.Width ~ Species, data = iris), covariate.labels = c('Versicolor', 'Virginica')) #>  #> --------------------------------------------------------------------- #>         &nbsp;          Estimate   Std. Error   t value    Pr(>|t|)   #> ---------------------- ---------- ------------ --------- ------------ #>     **Versicolor**       3.428      0.04804      71.36    5.708e-116  #>  #>     **Virginica**        -0.658     0.06794     -9.685    1.832e-17   #>  #>  **Speciesvirginica**    -0.454     0.06794     -6.683    4.539e-10   #> --------------------------------------------------------------------- #>  #> Table: Fitting linear model: Sepal.Width ~ Species #>   ## Prcomp pander(prcomp(USArrests)) #>  #> --------------------------------------------------------- #>     &nbsp;        PC1       PC2        PC3        PC4     #> -------------- --------- ---------- ---------- ---------- #>   **Murder**    0.0417    -0.04482   0.07989    -0.9949   #>  #>  **Assault**    0.9952    -0.05876   -0.06757   0.03894   #>  #>  **UrbanPop**   0.04634    0.9769    -0.2005    -0.05817  #>  #>    **Rape**     0.07516    0.2007     0.9741    0.07233   #> --------------------------------------------------------- #>  #> Table: Principal Components Analysis #>   ## Others pander(density(runif(10))) #>  #> -------------------------------------------- #>    &nbsp;      Coordinates   Density values  #> ------------- ------------- ---------------- #>   **Min.**       -0.133         0.003805     #>  #>  **1st Qu.**      0.197          0.1455      #>  #>  **Median**       0.527          0.7132      #>  #>   **Mean**        0.527          0.7558      #>  #>  **3rd Qu.**      0.857          1.428       #>  #>   **Max.**        1.187          1.492       #> -------------------------------------------- #>  #> Table: Kernel density of *runif(10)* (bandwidth: 0.1171332) #>  pander(density(mtcars$hp)) #>  #> -------------------------------------------- #>    &nbsp;      Coordinates   Density values  #> ------------- ------------- ---------------- #>   **Min.**       -32.12        4.956e-06     #>  #>  **1st Qu.**      80.69        0.0004066     #>  #>  **Median**       193.5         0.001663     #>  #>   **Mean**        193.5         0.002212     #>  #>  **3rd Qu.**      306.3         0.004087     #>  #>   **Max.**        419.1         0.006048     #> -------------------------------------------- #>  #> Table: Kernel density of *mtcars$hp* (bandwidth: 28.04104) #>   ## default method x <- chisq.test(table(mtcars$am, mtcars$gear)) #> Warning: Chi-squared approximation may be incorrect class(x) <- 'I heave never heard of!' pander(x) #> Warning: No pander.method for \"I heave never heard of!\", reverting to default. #>  #>  #>   * **statistic**: #>  #>     ----------- #>      X-squared #>     ----------- #>        20.94 #>     ----------- #>  #>   * **parameter**: #>  #>     ---- #>      df #>     ---- #>      2 #>     ---- #>  #>   * **p.value**: _2.831e-05_ #>   * **method**: Pearson's Chi-squared test #>   * **data.name**: table(mtcars$am, mtcars$gear) #>   * **observed**: #>  #>     --------------------- #>      &nbsp;   3    4   5 #>     -------- ---- --- --- #>      **0**    15   4   0 #>  #>      **1**    0    8   5 #>     --------------------- #>  #>   * **expected**: #>  #>     -------------------------------- #>      &nbsp;     3       4       5 #>     -------- ------- ------- ------- #>      **0**    8.906   7.125   2.969 #>  #>      **1**    6.094   4.875   2.031 #>     -------------------------------- #>  #>   * **residuals**: #>  #>     ----------------------------------- #>      &nbsp;     3        4        5 #>     -------- -------- -------- -------- #>      **0**    2.042    -1.171   -1.723 #>  #>      **1**    -2.469   1.415    2.083 #>     ----------------------------------- #>  #>   * **stdres**: #>  #>     ----------------------------------- #>      &nbsp;     3        4        5 #>     -------- -------- -------- -------- #>      **0**    4.395    -2.323   -2.943 #>  #>      **1**    -4.395   2.323    2.943 #>     ----------------------------------- #>  #>  #> <!-- end of list --> #>  #>"},{"path":"http://localhost/reference/wrapped_with_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"a wrapper for logger functionality — wrapped_with_logger","title":"a wrapper for logger functionality — wrapped_with_logger","text":"suitable used wrapped_factory imbue another function logger functionality.","code":""},{"path":"http://localhost/reference/wrapped_with_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a wrapper for logger functionality — wrapped_with_logger","text":"","code":"wrapped_with_logger(cmd, args, level = NULL)"},{"path":"http://localhost/reference/wrapped_with_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a wrapper for logger functionality — wrapped_with_logger","text":"cmd cli function, e.g., cli::cli_alert args args passed cmd via .call level logger level associated cli method","code":""},{"path":"http://localhost/news/index.html","id":"metayer-024","dir":"Changelog","previous_headings":"","what":"metayer 0.2.4","title":"metayer 0.2.4","text":"adding pkgdown support","code":""},{"path":"http://localhost/news/index.html","id":"metayer-023","dir":"Changelog","previous_headings":"","what":"metayer 0.2.3","title":"metayer 0.2.3","text":"adding NEWS.md passes R CMD check","code":""},{"path":"http://localhost/news/index.html","id":"metayer-022","dir":"Changelog","previous_headings":"","what":"metayer 0.2.2","title":"metayer 0.2.2","text":"first “complete” version working first CRAN checks","code":""}]
