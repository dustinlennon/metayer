% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/docs.R
\name{metayer-config}
\alias{metayer-config}
\title{metayer environment variables and options}
\description{
metayer environment variables and options
}
\section{User facing configuration}{


When metayer is loaded, it populates several options and sets up logging.  Much of this can be configured by making changes to config.yml.
\subsection{configurability}{

Package configuration is specified in config.yml, which is designed to mimic the behavior of the \href{https://rstudio.github.io/config/reference/index.html}{config} package.  As such, the top-level sections--default, testing, and jupyter--are intended to correspond to an execution / operational mode.  Our extension, \code{config_get}, enables YAML references and provides a few default handlers for custom YAML tags.
}

\subsection{custom YAML tags}{

Note that there are custom YAML tags available, \code{!optenv} and \code{!with_env}.
\subsection{!optenv}{

optenv is used to evaluate simple R expressions, like \code{logger::INFO}; the idea is to simplify the specification of objects or functions.
}

\subsection{!with_env}{

with_env allows strings to contain environment variables.
}

}

\subsection{config.yml}{
\subsection{logger}{
\subsection{format}{

A string specification for the logging format passed to logger::log_format
}

\subsection{logfile}{

The location of a log file.  This will become the log_appender at namespace global and index one.
}

\subsection{appenders}{

A list of appenders that will populate subsequent indexes of the global namespace.
}

\subsection{threshold}{

The log threshold, e.g., logger::INFO
}

}

\subsection{options}{
\subsection{cli.*}{

\href{https://cli.r-lib.org/reference/cli-config.html}{cli package options}
}

\subsection{cli.default_handler}{

We set this to \code{cli_nullity_handler} in order to enjoy null visibility in cli output.
}

\subsection{cli.ansi}{

Useful in testing to ensure that output doesn't have escape codes.
}

\subsection{cli.unicode}{

Useful in testing to ensure that output doesn't have unusual unicode characters.
}

\subsection{cli.num_colors}{

Useful in testing to ensure that output doesn't have escape codes.
}

\subsection{cli.condition_unicode_bullets}{

Useful in testing to ensure that output doesn't have unusual unicode characters.
}

\subsection{knitr.chunk.*}{

\href{https://yihui.org/knitr/options/#chunk-options}{knitr chunk options}
}

\subsection{knitr.chunk.dev}{

The default device used when knitting.
}

\subsection{knitr.chunk.comment}{

A cosmetic change for  R output.
}

\subsection{knitr.chunk.class.output}{

Â 
}

\subsection{knitr.chunk.error}{

An aesthetic choice for R output.

A cosmetic change for imbuing R output with class tags suitable for CSS.
}

\subsection{knitr.chunk.metayer_hook}{

A custom knitr options.  Setting this enables \href{./reference/sure_plot.html}{sure_plot} which requires a custom knitr hook (specified in .onLoad).
}

\subsection{knitr.package.*}{

\href{https://yihui.org/knitr/options/#package-options}{knitr package options}
}

\subsection{knitr.package.root.dir}{

The directory in which knitr will expect to find references.  pkgdown and rmarkdown behavior can be quite sensitive to this.
}

\subsection{mty.cli_null}{

The substitution made for NULL values in cli output.
}

\subsection{mty.fig.*}{

\code{with_grdev} default parameters.  See the function \href{reference/with_grdev.html}{reference}.
}

\subsection{uuid.generator}{

When testing, set this to test_mty_uuid for reproducible uuid-like output.
}

\subsection{uuid.generator.seed}{

A seed value for the uuid.generator.
}

}

\subsection{display}{
\subsection{ippx, ippy}{

Inches per pixel.  Not currently used.  This would be helpful for creating interactive devices--e.g. X11--with dimensions specified in pixels rather than inches.
}

}

\subsection{rdoc_config}{

This section serves as the default YAML header for new jupyter notebooks.  With this, one really only needs to specify a title when creating new documents.
\subsection{output}{

The usual jupyter YAML content.
}

}

\subsection{rmall_exclusions}{

A list of functions to blacklist when running \code{rm.all}.
}

}
}

